// This file is automatically generated and not supposed to be modified.
using System;
using Boolean = System.Boolean;
using String = System.String;
using List = Android.Runtime.JavaList;
using Map = Android.Runtime.JavaDictionary;

namespace Org.Onepf.Oms
{
	public interface IOpenInAppBillingService : global::Android.OS.IInterface
	{
		int IsBillingSupported (int apiVersion, String packageName, String type);
		Android.OS.Bundle GetSkuDetails (int apiVersion, String packageName, String type, Android.OS.Bundle skusBundle);
		Android.OS.Bundle GetBuyIntent (int apiVersion, String packageName, String sku, String type, String developerPayload);
		Android.OS.Bundle GetPurchases (int apiVersion, String packageName, String type, String continuationToken);
		int ConsumePurchase (int apiVersion, String packageName, String purchaseToken);
	}

	public abstract class IOpenInAppBillingServiceStub : global::Android.OS.Binder, global::Android.OS.IInterface, Org.Onepf.Oms.IOpenInAppBillingService
	{
		const string descriptor = "org.onepf.oms.IOpenInAppBillingService";
		public IOpenInAppBillingServiceStub ()
		{
			this.AttachInterface (this, descriptor);
		}

		public static Org.Onepf.Oms.IOpenInAppBillingService AsInterface (global::Android.OS.IBinder obj)
		{
			if (obj == null)
				return null;
			var iin = (global::Android.OS.IInterface) obj.QueryLocalInterface (descriptor);
			if (iin != null && iin is Org.Onepf.Oms.IOpenInAppBillingService)
				return (Org.Onepf.Oms.IOpenInAppBillingService) iin;
			return new Proxy (obj);
		}

		public global::Android.OS.IBinder AsBinder ()
		{
			return this;
		}

		protected override bool OnTransact (int code, global::Android.OS.Parcel data, global::Android.OS.Parcel reply, int flags)
		{
			switch (code) {
			case global::Android.OS.BinderConsts.InterfaceTransaction:
				reply.WriteString (descriptor);
				return true;

			case TransactionIsBillingSupported: {
				data.EnforceInterface (descriptor);
				int arg0 = default (int);
				arg0 = data.ReadInt ();
				String arg1 = default (String);
				arg1 = data.ReadString ();
				String arg2 = default (String);
				arg2 = data.ReadString ();
				var result = this.IsBillingSupported (arg0, arg1, arg2);
				reply.WriteInt (result);
				return true;
				}

			case TransactionGetSkuDetails: {
				data.EnforceInterface (descriptor);
				int arg0 = default (int);
				arg0 = data.ReadInt ();
				String arg1 = default (String);
				arg1 = data.ReadString ();
				String arg2 = default (String);
				arg2 = data.ReadString ();
				Android.OS.Bundle arg3;
				if ((0!=data.ReadInt())) {
					arg3 = Android.OS.Bundle.Creator.CreateFromParcel(data) as Android.OS.Bundle;
				}
				else {
					arg3 = null;
				}
				var result = this.GetSkuDetails (arg0, arg1, arg2, arg3);
				if ((result!=null)) {
					reply.WriteInt(1);
					result.WriteToParcel(reply, Android.OS.ParcelableWriteFlags.ReturnValue);
				}
				else {
					reply.WriteInt(0);
				}
				return true;
				}

			case TransactionGetBuyIntent: {
				data.EnforceInterface (descriptor);
				int arg0 = default (int);
				arg0 = data.ReadInt ();
				String arg1 = default (String);
				arg1 = data.ReadString ();
				String arg2 = default (String);
				arg2 = data.ReadString ();
				String arg3 = default (String);
				arg3 = data.ReadString ();
				String arg4 = default (String);
				arg4 = data.ReadString ();
				var result = this.GetBuyIntent (arg0, arg1, arg2, arg3, arg4);
				if ((result!=null)) {
					reply.WriteInt(1);
					result.WriteToParcel(reply, Android.OS.ParcelableWriteFlags.ReturnValue);
				}
				else {
					reply.WriteInt(0);
				}
				return true;
				}

			case TransactionGetPurchases: {
				data.EnforceInterface (descriptor);
				int arg0 = default (int);
				arg0 = data.ReadInt ();
				String arg1 = default (String);
				arg1 = data.ReadString ();
				String arg2 = default (String);
				arg2 = data.ReadString ();
				String arg3 = default (String);
				arg3 = data.ReadString ();
				var result = this.GetPurchases (arg0, arg1, arg2, arg3);
				if ((result!=null)) {
					reply.WriteInt(1);
					result.WriteToParcel(reply, Android.OS.ParcelableWriteFlags.ReturnValue);
				}
				else {
					reply.WriteInt(0);
				}
				return true;
				}

			case TransactionConsumePurchase: {
				data.EnforceInterface (descriptor);
				int arg0 = default (int);
				arg0 = data.ReadInt ();
				String arg1 = default (String);
				arg1 = data.ReadString ();
				String arg2 = default (String);
				arg2 = data.ReadString ();
				var result = this.ConsumePurchase (arg0, arg1, arg2);
				reply.WriteInt (result);
				return true;
				}

			}
			return base.OnTransact (code, data, reply, flags);
		}

		public class Proxy : Java.Lang.Object, Org.Onepf.Oms.IOpenInAppBillingService
		{
			global::Android.OS.IBinder remote;

			public Proxy (global::Android.OS.IBinder remote)
			{
				this.remote = remote;
			}

			public global::Android.OS.IBinder AsBinder ()
			{
				return remote;
			}

			public string GetInterfaceDescriptor ()
			{
				return descriptor;
			}

			public int IsBillingSupported (int apiVersion, String packageName, String type)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
int __result = default (int);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteInt (apiVersion);
					__data.WriteString (packageName);
					__data.WriteString (type);
					remote.Transact (IOpenInAppBillingServiceStub.TransactionIsBillingSupported, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadInt ();

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public Android.OS.Bundle GetSkuDetails (int apiVersion, String packageName, String type, Android.OS.Bundle skusBundle)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				Android.OS.Bundle __result;

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteInt (apiVersion);
					__data.WriteString (packageName);
					__data.WriteString (type);
					if ((skusBundle!=null)) {
						__data.WriteInt(1);
						skusBundle.WriteToParcel(__data, 0);
					}
					else {
						__data.WriteInt(0);
					}
					remote.Transact (IOpenInAppBillingServiceStub.TransactionGetSkuDetails, __data, __reply, 0);
					__reply.ReadException ();
					if ((0!=__reply.ReadInt())) {
						__result = Android.OS.Bundle.Creator.CreateFromParcel(__reply) as Android.OS.Bundle;
					}
					else {
						__result = null;
					}
				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public Android.OS.Bundle GetBuyIntent (int apiVersion, String packageName, String sku, String type, String developerPayload)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				Android.OS.Bundle __result;

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteInt (apiVersion);
					__data.WriteString (packageName);
					__data.WriteString (sku);
					__data.WriteString (type);
					__data.WriteString (developerPayload);
					remote.Transact (IOpenInAppBillingServiceStub.TransactionGetBuyIntent, __data, __reply, 0);
					__reply.ReadException ();
					if ((0!=__reply.ReadInt())) {
						__result = Android.OS.Bundle.Creator.CreateFromParcel(__reply) as Android.OS.Bundle;
					}
					else {
						__result = null;
					}
				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public Android.OS.Bundle GetPurchases (int apiVersion, String packageName, String type, String continuationToken)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				Android.OS.Bundle __result;

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteInt (apiVersion);
					__data.WriteString (packageName);
					__data.WriteString (type);
					__data.WriteString (continuationToken);
					remote.Transact (IOpenInAppBillingServiceStub.TransactionGetPurchases, __data, __reply, 0);
					__reply.ReadException ();
					if ((0!=__reply.ReadInt())) {
						__result = Android.OS.Bundle.Creator.CreateFromParcel(__reply) as Android.OS.Bundle;
					}
					else {
						__result = null;
					}
				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public int ConsumePurchase (int apiVersion, String packageName, String purchaseToken)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
int __result = default (int);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteInt (apiVersion);
					__data.WriteString (packageName);
					__data.WriteString (purchaseToken);
					remote.Transact (IOpenInAppBillingServiceStub.TransactionConsumePurchase, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadInt ();

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


		}

		internal const int TransactionIsBillingSupported = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 0;

		internal const int TransactionGetSkuDetails = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 1;

		internal const int TransactionGetBuyIntent = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 2;

		internal const int TransactionGetPurchases = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 3;

		internal const int TransactionConsumePurchase = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 4;

		public abstract int IsBillingSupported (int apiVersion, String packageName, String type);

		public abstract Android.OS.Bundle GetSkuDetails (int apiVersion, String packageName, String type, Android.OS.Bundle skusBundle);

		public abstract Android.OS.Bundle GetBuyIntent (int apiVersion, String packageName, String sku, String type, String developerPayload);

		public abstract Android.OS.Bundle GetPurchases (int apiVersion, String packageName, String type, String continuationToken);

		public abstract int ConsumePurchase (int apiVersion, String packageName, String purchaseToken);

	}
}
